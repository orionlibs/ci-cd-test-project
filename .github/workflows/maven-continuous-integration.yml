name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build & Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [ 21 ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: '21'

      - name: Install missing library
      run: sudo apt-get install libncurses5
      
      - name: Cache Maven local repo
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build with Maven
        run: mvn --batch-mode clean verify

  deploy:
    name: Deploy to EC2
    needs: build
    if: github.ref == 'refs/heads/main' && success()
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Prepare SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: Copy artifact to EC2
        run: |
          scp target/*.jar \
            ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/home/${{ secrets.EC2_USER }}/app.jar

      - name: Restart application on EC2
        run: |
          ssh ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            # Create systemd service if missing
            if ! systemctl list-units --full -all | grep -q my-java-app.service; then
              sudo tee /etc/systemd/system/my-java-app.service > /dev/null << 'SERVICE'
[Unit]
Description=My Java App
After=network.target

[Service]
User=deploy
ExecStart=/usr/bin/java -jar /home/deploy/app.jar
Restart=on-failure

[Install]
WantedBy=multi-user.target
SERVICE
              sudo systemctl daemon-reload
              sudo systemctl enable my-java-app
            fi

            # Always restart (or start) the service
            sudo systemctl restart my-java-app
          EOF
